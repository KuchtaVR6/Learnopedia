generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model adoptionamendment {
  AmendmentID Int       @id
  newParent   Int?
  amendment   amendment @relation(fields: [AmendmentID], references: [ID], onDelete: Cascade, map: "FKAdoptionAm923671")
  content     content?  @relation(fields: [newParent], references: [ID], map: "FKAdoptionAm410338")

  @@index([newParent], map: "FKAdoptionAm410338")
}

model amendment {
  ID                  Int                  @id @default(autoincrement())
  CreatorID           Int?
  timestamp           DateTime             @db.DateTime(0)
  ContentID           Int?
  significance        Int
  applied             Boolean              @db.Bit(1)
  content             content?             @relation(fields: [ContentID], references: [ID], map: "FKAmendment887662")
  user                user?                @relation(fields: [CreatorID], references: [ID], map: "FKAmendment140140")
  adoptionamendment   adoptionamendment?
  keywordmodamendment keywordmodamendment?
  listamendments      listamendments?
  partamendment       partamendment?

  @@index([CreatorID], map: "FKAmendment140140")
  @@index([ContentID], map: "FKAmendment887662")
}

model chapter {
  ChapterID Int      @id @default(autoincrement())
  ContentID Int      @unique
  CourseID  Int
  content   content  @relation(fields: [ContentID], references: [ID], onDelete: Cascade, map: "FKChapter222112")
  course    course   @relation(fields: [CourseID], references: [CourseID], onDelete: Cascade, map: "FKChapter463302")
  lesson    lesson[]

  @@index([ContentID], map: "FKChapter222112")
  @@index([CourseID], map: "FKChapter463302")
}

model content {
  ID                Int                 @id @default(autoincrement())
  name              String              @db.VarChar(255)
  description       String              @db.VarChar(255)
  views             Int
  upVotes           Int
  downVotes         Int
  dateModified      DateTime            @db.DateTime(0)
  dateCreated       DateTime            @db.DateTime(0)
  seqNumber         Int
  public            Boolean             @db.Bit(1)
  adoptionamendment adoptionamendment[]
  amendment         amendment[]
  chapter           chapter[]
  contentlistmod    contentlistmod[]
  course            course[]
  creationamendment creationamendment[]
  keyword           keyword[]
  lesson            lesson[]
}

model contentlistmod {
  ID             Int             @id @default(autoincrement())
  AmendmentID    Int?
  ChildID        Int?
  newSeqNumber   Int?
  delete         Boolean         @db.Bit(1)
  listamendments listamendments? @relation(fields: [AmendmentID], references: [AmendmentID], onDelete: Cascade, map: "FKContentLis336816")
  content        content?        @relation(fields: [ChildID], references: [ID], map: "FKContentLis373697")

  @@index([AmendmentID], map: "FKContentLis336816")
  @@index([ChildID], map: "FKContentLis373697")
}

model course {
  CourseID  Int       @id @default(autoincrement())
  ContentID Int       @unique
  content   content   @relation(fields: [ContentID], references: [ID], onDelete: Cascade, map: "FKCourse342777")
  chapter   chapter[]

  @@index([ContentID], map: "FKCourse342777")
}

model creationamendment {
  AmendmentID         Int                 @id
  newName             String              @db.VarChar(255)
  newDescription      String              @db.VarChar(255)
  type                String              @db.VarChar(255)
  newParent           Int?
  seqNumber           Int
  keywordmodamendment keywordmodamendment @relation(fields: [AmendmentID], references: [AmendmentID], onDelete: Cascade, map: "FKCreationAm946974")
  content             content?            @relation(fields: [newParent], references: [ID], map: "FKCreationAm315379")

  @@index([newParent], map: "FKCreationAm315379")
}

model figure {
  LessonPartID Int         @id
  lessonparts  lessonparts @relation(fields: [LessonPartID], references: [LessonPartID], onDelete: Cascade, map: "FKFigure146251")
  subfigure    subfigure[]
}

model keyword {
  ID              Int               @id @default(autoincrement())
  ContentID       Int?
  word            String            @db.VarChar(255)
  Score           Int
  content         content?          @relation(fields: [ContentID], references: [ID], map: "FKKeyword323953")
  keywordentrymod keywordentrymod[]

  @@index([ContentID], map: "FKKeyword323953")
}

model keywordentrymod {
  ID                  Int
  AmendmentID         Int
  KeywordID           Int?
  newWord             String?
  score               Int?
  delete              Boolean?            @db.Bit(1)
  keywordmodamendment keywordmodamendment @relation(fields: [AmendmentID], references: [AmendmentID], onDelete: Cascade, map: "FKKeywordEnt546603")
  keyword             keyword?            @relation(fields: [KeywordID], references: [ID], onDelete: Cascade, map: "FKKeywordEnt354952")

  @@id([ID, AmendmentID])
  @@index([KeywordID], map: "FKKeywordEnt354952")
  @@index([AmendmentID], map: "FKKeywordEnt546603")
}

model keywordmodamendment {
  AmendmentID       Int                @id
  amendment         amendment          @relation(fields: [AmendmentID], references: [ID], onDelete: Cascade, map: "FKKeywordMod848223")
  creationamendment creationamendment?
  keywordentrymod   keywordentrymod[]
  metaamendment     metaamendment?
}

model lesson {
  LessonID    Int           @id @default(autoincrement())
  ContentID   Int           @unique
  ChapterID   Int
  chapter     chapter       @relation(fields: [ChapterID], references: [ChapterID], onDelete: Cascade, map: "FKLesson585002")
  content     content       @relation(fields: [ContentID], references: [ID], onDelete: Cascade, map: "FKLesson260152")
  lessonparts lessonparts[]

  @@index([ContentID], map: "FKLesson260152")
  @@index([ChapterID], map: "FKLesson585002")
}

model lessonparts {
  LessonPartID              Int                         @id @default(autoincrement())
  LessonID                  Int?
  seqNumber                 Int
  lesson                    lesson?                     @relation(fields: [LessonID], references: [LessonID], onDelete: Cascade, map: "FKLessonPart224088")
  figure                    figure?
  paragraph                 paragraph?
  partamendment             partamendment[]
  partmodificationamendment partmodificationamendment[]
  protocol_snippet          protocol_snippet?
  video                     video?

  @@index([LessonID], map: "FKLessonPart224088")
}

model listamendments {
  AmendmentID    Int              @id
  amendment      amendment        @relation(fields: [AmendmentID], references: [ID], onDelete: Cascade, map: "FKListAmendm497932")
  contentlistmod contentlistmod[]
}

model metaamendment {
  AmendmentID         Int                 @id
  newName             String?             @db.VarChar(255)
  newDescription      String?             @db.VarChar(255)
  keywordmodamendment keywordmodamendment @relation(fields: [AmendmentID], references: [AmendmentID], onDelete: Cascade, map: "FKMetaAmendm946708")
}

model paragraph {
  LessonPartID Int         @id
  basicText    String      @db.VarChar(255)
  advancedText String?     @db.VarChar(255)
  lessonparts  lessonparts @relation(fields: [LessonPartID], references: [LessonPartID], onDelete: Cascade, map: "FKParagraph761528")
}

model partamendment {
  AmendmentID               Int                        @id
  LessonPartID              Int?
  amendment                 amendment                  @relation(fields: [AmendmentID], references: [ID], onDelete: Cascade, map: "FKPartAmendm644504")
  lessonparts               lessonparts?               @relation(fields: [LessonPartID], references: [LessonPartID], map: "FKPartAmendm280467")
  partdeletionamendment     partdeletionamendment?
  partinsertamendment       partinsertamendment?
  partmodificationamendment partmodificationamendment?

  @@index([LessonPartID], map: "FKPartAmendm280467")
}

model partdeletionamendment {
  AmendmentID   Int           @id
  partamendment partamendment @relation(fields: [AmendmentID], references: [AmendmentID], onDelete: Cascade, map: "FKPartDeleti287587")
}

model partinsertamendment {
  AmendmentID   Int           @id
  seqNumber     Int
  moveExisting  Boolean?      @db.Bit(1)
  partamendment partamendment @relation(fields: [AmendmentID], references: [AmendmentID], onDelete: Cascade, map: "FKPartInsert504372")
}

model partmodificationamendment {
  AmendmentID   Int           @id
  NewPartID     Int?
  partamendment partamendment @relation(fields: [AmendmentID], references: [AmendmentID], onDelete: Cascade, map: "FKPartModifi264552")
  lessonparts   lessonparts?  @relation(fields: [NewPartID], references: [LessonPartID], map: "FKPartModifi577240")

  @@index([NewPartID], map: "FKPartModifi577240")
}

model protocol_snippet {
  LessonPartID Int         @id
  language     String?     @db.VarChar(255)
  content      String      @db.VarChar(255)
  lessonparts  lessonparts @relation(fields: [LessonPartID], references: [LessonPartID], onDelete: Cascade, map: "FKProtocol S929228")

  @@map("protocol snippet")
}

model subfigure {
  ID          Int     @id @default(autoincrement())
  FigureID    Int
  path        String  @db.VarChar(255)
  Xoffset     Int?
  Yoffset     Int?
  name        String? @db.VarChar(255)
  description String? @db.VarChar(255)
  figure      figure  @relation(fields: [FigureID], references: [LessonPartID], onDelete: Cascade, map: "FKSubfigure449135")

  @@index([FigureID], map: "FKSubfigure449135")
}

model user {
  ID        Int         @id @default(autoincrement())
  nickname  String      @unique(map: "nickname") @db.VarChar(255)
  email     String      @unique(map: "email") @db.VarChar(255)
  fname     String      @db.VarChar(255)
  lname     String      @db.VarChar(255)
  passHash  String      @db.VarChar(255)
  amendment amendment[]
}

model video {
  LessonPartID Int         @id
  url          String      @db.VarChar(255)
  lessonparts  lessonparts @relation(fields: [LessonPartID], references: [LessonPartID], onDelete: Cascade, map: "FKVideo400387")
}
