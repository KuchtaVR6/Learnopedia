generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model adoptionamendment {
  AmendmentID       Int       @id
  newParent         Int?
  receiverAmendment Int?
  amendment         amendment @relation(fields: [AmendmentID], references: [ID], onDelete: Cascade, map: "FKAdoptionAm923671")
  content           content?  @relation(fields: [newParent], references: [ID], map: "FKAdoptionAm410338")

  @@index([newParent], map: "FKAdoptionAm410338")
}

model amendment {
  ID                  Int                  @id @default(autoincrement())
  CreatorID           Int?
  timestamp           DateTime             @db.DateTime(0)
  ContentID           Int?
  significance        Int                  @default(0)
  applied             Boolean
  tariff              Int                  @default(100)
  content             content?             @relation(fields: [ContentID], references: [ID], map: "FKAmendment887662")
  user                user?                @relation(fields: [CreatorID], references: [ID], map: "FKAmendment140140")
  adoptionamendment   adoptionamendment?
  amendmentopinion    amendmentopinion[]
  keywordmodamendment keywordmodamendment?
  listamendment       listamendment?
  partamendment       partamendment?

  @@index([CreatorID], map: "FKAmendment140140")
  @@index([ContentID], map: "FKAmendment887662")
}

model chapter {
  ChapterID Int      @id @default(autoincrement())
  ContentID Int      @unique(map: "ContentID")
  CourseID  Int
  content   content  @relation(fields: [ContentID], references: [ID], onDelete: Cascade, map: "FKChapter222112")
  course    course   @relation(fields: [CourseID], references: [CourseID], onDelete: Cascade, map: "FKChapter463302")
  lesson    lesson[]

  @@index([CourseID], map: "FKChapter463302")
}

model content {
  ID                Int                 @id @default(autoincrement())
  name              String              @db.VarChar(255)
  description       String              @db.VarChar(255)
  views             Int
  dateModified      DateTime            @db.DateTime(0)
  dateCreated       DateTime            @db.DateTime(0)
  seqNumber         Int
  public            Boolean             @db.Bit(1)
  adoptionamendment adoptionamendment[]
  amendment         amendment[]
  chapter           chapter?
  contentlistmod    contentlistmod[]
  contentopinion    contentopinion[]
  course            course?
  creationamendment creationamendment[]
  keyword           keyword[]
  lesson            lesson?
}

model contentlistmod {
  ID            Int            @id @default(autoincrement())
  AmendmentID   Int?
  LessonPartID  Int?
  newSeqNumber  Int?
  delete        Boolean?       @db.Bit(1)
  ChildID       Int?
  listamendment listamendment? @relation(fields: [AmendmentID], references: [AmendmentID], onDelete: Cascade, map: "FKContentLis156423")
  content       content?       @relation(fields: [ChildID], references: [ID], map: "FKContentLis689679")
  lessonpart    lessonpart?    @relation(fields: [LessonPartID], references: [LessonPartID], map: "FKContentLis770552")

  @@index([AmendmentID], map: "FKContentLis156423")
  @@index([ChildID], map: "FKContentLis689679")
  @@index([LessonPartID], map: "FKContentLis770552")
}

model course {
  CourseID  Int       @id @default(autoincrement())
  ContentID Int       @unique(map: "ContentID")
  content   content   @relation(fields: [ContentID], references: [ID], onDelete: Cascade, map: "FKCourse342777")
  chapter   chapter[]
}

model creationamendment {
  AmendmentID         Int                 @id
  newName             String              @db.VarChar(255)
  newDescription      String              @db.VarChar(255)
  newParent           Int?
  seqNumber           Int
  type                String              @db.VarChar(255)
  keywordmodamendment keywordmodamendment @relation(fields: [AmendmentID], references: [AmendmentID], onDelete: Cascade, map: "FKCreationAm946974")
  content             content?            @relation(fields: [newParent], references: [ID], map: "FKCreationAm315379")

  @@index([newParent], map: "FKCreationAm315379")
}

model figure {
  LessonPartID Int         @id
  lessonpart   lessonpart  @relation(fields: [LessonPartID], references: [LessonPartID], onDelete: Cascade, map: "FKFigure783054")
  subfigure    subfigure[]
}

model keyword {
  ID              Int               @id @default(autoincrement())
  ContentID       Int?
  word            String            @db.VarChar(255)
  Score           Int
  content         content?          @relation(fields: [ContentID], references: [ID], map: "FKKeyword323953")
  keywordentrymod keywordentrymod[]

  @@index([ContentID], map: "FKKeyword323953")
}

model keywordentrymod {
  ID                  Int
  AmendmentID         Int
  KeywordID           Int?
  newWord             String?             @db.VarChar(255)
  score               Int?
  delete              Boolean?            @db.Bit(1)
  keywordmodamendment keywordmodamendment @relation(fields: [AmendmentID], references: [AmendmentID], onDelete: Cascade, map: "FKKeywordEnt546603")
  keyword             keyword?            @relation(fields: [KeywordID], references: [ID], onDelete: Cascade, map: "FKKeywordEnt354952")

  @@id([ID, AmendmentID])
  @@index([KeywordID], map: "FKKeywordEnt354952")
  @@index([AmendmentID], map: "FKKeywordEnt546603")
}

model keywordmodamendment {
  AmendmentID       Int                @id
  amendment         amendment          @relation(fields: [AmendmentID], references: [ID], onDelete: Cascade, map: "FKKeywordMod848223")
  creationamendment creationamendment?
  keywordentrymod   keywordentrymod[]
  metaamendment     metaamendment?
}

model lesson {
  LessonID   Int          @id @default(autoincrement())
  ContentID  Int          @unique(map: "ContentID")
  ChapterID  Int
  chapter    chapter      @relation(fields: [ChapterID], references: [ChapterID], onDelete: Cascade, map: "FKLesson585002")
  content    content      @relation(fields: [ContentID], references: [ID], onDelete: Cascade, map: "FKLesson260152")
  lessonpart lessonpart[]

  @@index([ChapterID], map: "FKLesson585002")
}

model lessonpart {
  LessonPartID            Int                       @id @default(autoincrement())
  LessonID                Int?
  seqNumber               Int
  lesson                  lesson?                   @relation(fields: [LessonID], references: [LessonID], onDelete: Cascade, map: "FKLessonPart139108")
  contentlistmod          contentlistmod[]
  figure                  figure?
  paragraph               paragraph?
  partaddreplaceamendment partaddreplaceamendment[]
  partamendment           partamendment[]
  protocolsnippet         protocolsnippet?
  video                   video?

  @@index([LessonID], map: "FKLessonPart139108")
}

model listamendment {
  AmendmentID    Int              @id
  amendment      amendment        @relation(fields: [AmendmentID], references: [ID], onDelete: Cascade, map: "FKListAmendm321674")
  contentlistmod contentlistmod[]
}

model metaamendment {
  AmendmentID         Int                 @id
  newName             String?             @db.VarChar(255)
  newDescription      String?             @db.VarChar(255)
  keywordmodamendment keywordmodamendment @relation(fields: [AmendmentID], references: [AmendmentID], onDelete: Cascade, map: "FKMetaAmendm946708")
}

model paragraph {
  LessonPartID Int        @id
  basicText    String     @db.VarChar(1000)
  advancedText String?    @db.VarChar(1000)
  lessonpart   lessonpart @relation(fields: [LessonPartID], references: [LessonPartID], onDelete: Cascade, map: "FKParagraph124725")
}

model partaddreplaceamendment {
  AmendmentID   Int           @id
  seqNumber     Int
  OldPartID     Int?
  partamendment partamendment @relation(fields: [AmendmentID], references: [AmendmentID], onDelete: Cascade, map: "FKPartAddRep747054")
  lessonpart    lessonpart?   @relation(fields: [OldPartID], references: [LessonPartID], map: "FKPartAddRep928829")

  @@index([OldPartID], map: "FKPartAddRep928829")
}

model partamendment {
  AmendmentID             Int                      @id
  LessonPartID            Int?
  amendment               amendment                @relation(fields: [AmendmentID], references: [ID], onDelete: Cascade, map: "FKPartAmendm644504")
  lessonpart              lessonpart?              @relation(fields: [LessonPartID], references: [LessonPartID], map: "FKPartAmendm643663")
  partaddreplaceamendment partaddreplaceamendment?

  @@index([LessonPartID], map: "FKPartAmendm643663")
}

model protocolsnippet {
  LessonPartID Int        @id
  language     String?    @db.VarChar(255)
  content      String     @db.VarChar(500)
  lessonpart   lessonpart @relation(fields: [LessonPartID], references: [LessonPartID], onDelete: Cascade, map: "FKProtocolSn123813")
}

model session {
  UserID       Int
  timestamp    DateTime      @db.DateTime(0)
  invalidated  Boolean       @db.Bit(1)
  TTL          Int
  agent        String        @db.VarChar(255)
  refreshToken String        @db.VarChar(255)
  user         user          @relation(fields: [UserID], references: [ID], onDelete: Cascade, map: "FKSession82632")
  accesstoken  accesstoken[]

  @@id([UserID, timestamp])
  @@index([UserID], map: "FKSession82632")
}

model subfigure {
  ID          Int     @id @default(autoincrement())
  FigureID    Int
  path        String  @db.VarChar(255)
  XOffset     Int?
  YOffset     Int?
  name        String? @db.VarChar(255)
  description String? @db.VarChar(500)
  figure      figure  @relation(fields: [FigureID], references: [LessonPartID], onDelete: Cascade, map: "FKSubfigure449135")

  @@index([FigureID], map: "FKSubfigure449135")
}

model user {
  ID               Int                @id @default(autoincrement())
  nickname         String             @unique(map: "nickname") @db.VarChar(255)
  email            String             @unique(map: "email") @db.VarChar(255)
  fname            String             @db.VarChar(255)
  lname            String             @db.VarChar(255)
  passHash         String             @db.VarChar(255)
  avatarFile       String?            @db.VarChar(255)
  colorA           String?            @db.VarChar(255)
  colorB           String?            @db.VarChar(255)
  amendment        amendment[]
  amendmentopinion amendmentopinion[]
  contentopinion   contentopinion[]
  session          session[]
}

model video {
  LessonPartID Int        @id
  url          String     @db.VarChar(255)
  lessonpart   lessonpart @relation(fields: [LessonPartID], references: [LessonPartID], onDelete: Cascade, map: "FKVideo763583")
}

model accesstoken {
  token            String   @id @db.VarChar(255)
  SessionUserID    Int
  Sessiontimestamp DateTime @db.DateTime(0)
  timestamp        DateTime @db.DateTime(0)
  TTL              Int
  sequence         Int
  session          session  @relation(fields: [SessionUserID, Sessiontimestamp], references: [UserID, timestamp], onDelete: Cascade, map: "FKAccessToken78212")

  @@index([SessionUserID, Sessiontimestamp], map: "FKAccessToken78212")
}

model amendmentopinion {
  userID      Int
  amendmentID Int
  positive    Boolean   @db.Bit(1)
  amendment   amendment @relation(fields: [amendmentID], references: [ID], onDelete: Cascade, map: "FKAmendmentOpinion43242")
  user        user      @relation(fields: [userID], references: [ID], onDelete: Cascade, map: "FKAmendmentOpinion34263")

  @@id([userID, amendmentID])
  @@index([userID], map: "FKAmendmentOpinion34263")
  @@index([amendmentID], map: "FKAmendmentOpinion43242")
}

model contentopinion {
  userID    Int
  contentID Int
  positive  Boolean @db.Bit(1)
  content   content @relation(fields: [contentID], references: [ID], onDelete: Cascade, map: "FKContentOpinion43242")
  user      user    @relation(fields: [userID], references: [ID], onDelete: Cascade, map: "FKContentOpinion34263")

  @@id([userID, contentID])
  @@index([userID], map: "FKContentOpinion34263")
  @@index([contentID], map: "FKContentOpinion43242")
}
